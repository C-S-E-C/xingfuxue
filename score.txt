🔍 开始嗅探：.
🔍 正在搜索源代码文件......
🔍 正在搜索源代码文件... 1🔍 正在搜索源代码文件... 2🔍 正在搜索源代码文件... 3🔍 正在搜索源代码文件... 4                                                                                📂 已找到文件数: 4
[K  正在分析文件: 1/4 [███████░░░░░░░░░░░░░░░░░░░░░░░]
[K  正在处理: ./xingfuxue/js/mobile.js[A[K  正在分析文件: 2/4 [███████████████░░░░░░░░░░░░░░░]
[K  正在处理: ./xingfuxue/js/script.js[A[K  正在分析文件: 3/4 [██████████████████████░░░░░░░░]
[K  正在处理: ./mobile/js/mobile.js[A[K  正在分析文件: 4/4 [██████████████████████████████]
[K  正在处理: ./mobile/js/script.js[A[K
────────────────────────────────────────────────────────────────────────────────

  🌸 屎山代码分析报告 🌸
────────────────────────────────────────────────────────────────────────────────

  总体评分: 28.24 / 100 - 略带清香，偶尔飘过一丝酸爽
  屎山等级: 偶有异味 - 基本没事，但是有伤风化


◆ 评分指标详情

✓✓ 状态管理             	0.00分	  	  状态管理清晰，变量作用域合理，状态可预测
✓✓ 注释覆盖率            	16.04分	 	  注释不错，能靠它活下来
 ✓ 错误处理             	25.00分	 	  有处理，但处理得跟没处理一样
 ✓ 代码结构             	30.00分	 	  结构还行，但有点混乱
 ○ 代码重复度            	35.00分	 	  有点重复，抽象一下不难吧
 • 循环复杂度            	50.00分	 	  绕来绕去，跟你脑子一样乱

  评分计算: (0.00×0.20 + 16.04×0.15 + 25.00×0.10 + 30.00×0.15 + 35.00×0.15 + 50.00×0.30) ÷ 1.05 = 28.24


◆ 全部代码文件分析

  1. ./xingfuxue/js/script.js  (屎气指数: 30.60)

     ✓ 代码质量良好，没有明显问题

  2. ./mobile/js/script.js     (屎气指数: 30.48)

     ✓ 代码质量良好，没有明显问题

  3. ./xingfuxue/js/mobile.js  (屎气指数: 25.95)

     ✓ 代码质量良好，没有明显问题

  4. ./mobile/js/mobile.js     (屎气指数: 25.95)

     ✓ 代码质量良好，没有明显问题

◆ 诊断结论

  🌸 偶有异味 - 基本没事，但是有伤风化

  👍 继续保持，你是编码界的一股清流，代码洁癖者的骄傲


◆ 📊 基本统计:

  📊 📊 基本统计:
    总文件数:           4
    总代码行:           1083
    总问题数:           0

  🔍 🔍 指标详细信息:

    【状态管理           】(权重: 0.20)
      描述: 检测函数长度及状态变量管理，合理的函数长度和状态管理能提高代码可维护性
      得分: 0.00/100

    【注释覆盖率          】(权重: 0.15)
      描述: 检测代码的注释覆盖率，良好的注释能提高代码可读性和可维护性
      得分: 16.04/100

    【错误处理           】(权重: 0.10)
      描述: 检测代码中的错误处理情况，良好的错误处理能提高代码的健壮性
      得分: 25.00/100

    【代码结构           】(权重: 0.15)
      描述: 检测代码的嵌套深度和引用复杂度，评估结构清晰度
      得分: 30.00/100

    【代码重复度          】(权重: 0.15)
      描述: 评估代码中重复逻辑的比例，重复代码越多，越需要抽象和重构
      得分: 35.00/100

    【循环复杂度          】(权重: 0.30)
      描述: 测量函数的控制流复杂度，复杂度越高，代码越难理解和测试
      得分: 50.00/100
────────────────────────────────────────────────────────────────────────────────

